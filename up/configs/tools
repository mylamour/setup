#!/bin/bash

echo "${RED}${HIGHLIGHT}Script Running On the Remote Server Now ${NC}"

# use build to run demo code quickly
# mainly focus on build script in github
BASEDIR="/home/ubuntu/"

install_dict() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    mkdir -p dict && cd dict
    git clone https://github.com/1N3/IntruderPayloads &
    git clone https://github.com/Bo0oM/fuzz.txt &
    git clone https://github.com/gh0stkey/Web-Fuzzing-Box &
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_nuclei() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    wget -q -O nuclei_2.6.2_linux_amd64.zip https://github.com/projectdiscovery/nuclei/releases/download/v2.6.2/nuclei_2.6.2_linux_amd64.zip
    unzip nuclei_2.6.2_linux_amd64.zip -d nuclei
    cd nuclei && git clone https://github.com/projectdiscovery/nuclei-templates &
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_rengine() {
    # rengine was all in one platform
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    git clone https://github.com/yogeshojha/rengine && cd rengine
    chmod +x ./install.shell && sudo ./install.sh
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_zap() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    wget -q -O zap.tar.gz https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2.11.1_Linux.tar.gz
    tar -xf zap.tar.gz
    echo "${GREEN}[Succeed]${NC}: Installed Successful"

}

install_hetty() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    wget -q -O hetty.tar.gz https://github.com/dstotijn/hetty/releases/download/v0.6.0/hetty_0.6.0_Linux_x86_64.tar.gz
    tar -xf hetty.tar.gz
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_gitminer() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    git clone https://github.com/UnkL4b/GitMiner && cd GitMiner && pip3 install -r requirements.txt >/dev/null
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_xrdp() {
    # TODO: need to test and change xrdp password and change root password
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    printf '2\n' | sudo apt-get install -y ubuntu-desktop xrdp >/dev/null
    sudo adduser xrdp ssl-cert && sudo systemctl restart xrdp
    sudo ufw allow from 0.0.0.0/0 to any port 3389
    sudo ufw reload
    sudo ufw status
    X -configure && X -config /root/xorg.conf.new


    # sudo mv /root/xorg.conf.new /etc/X11/xorg.conf
    # docker run -p 0.0.0.0:6080:80 -e USER=doro -e PASSWORD=password -v /dev/shm:/dev/shm dorowu/ubuntu-desktop-lxde-vnc:focal
}

install_sn1per() {
    # include many tools, eg. nuclei
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    # echo "${RED}PLEASE KEEP WAITING,IT'S WOULD TAKE LONG TIME...ABOUT 18min ${NC}:"
    # git clone https://github.com/1N3/Sn1per && cd Sn1per
    # chmod +x install.sh && bash install.sh
    docker pull xer0dayz/sn1per
    mkdirp -p ~/sn1per
    alias sniper="docker run -it xer0dayz/sn1per /bin/bash"
    echo "${GREEN}[Succeed]${NC}: Installed Successful"

    # docker pull xer0dayz/sn1per
    # docker run -it xer0dayz/sn1per /bin/bash
}

install_emagent() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    git clone https://github.com/wuseman/EMAGNET && cd EMAGNET && chmod +x emagnet/emagnet.sh
    # bash emagnet/emagnet.sh --emagnet
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_osms() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    # docker run -it --rm -v osmws:/root/.osmedeus/workspaces j3ssie/osmedeus:latest scan -f fast -t $DOMAINNAME
}

if [ ! -z ${1} ]; then
    case ${1} in
    'allin')

        for i in $(typeset -f | awk '/ \(\) $/ && !/^main / {print $1}'); do
            eval $i
        done

        ;;
    'dict')
        install_dict
        ;;
    'hetty')
        install_hetty
        ;;
    'zap')
        install_zap
        ;;
    'nuclei')
        install_nuclei
        ;;
    'rengine')
        install_rengine
        ;;
    'sn1per')
        install_sn1per
        ;;
    'xrdp')
        install_xrdp
        ;;
    'emag')
        install_emagent
        ;;
    'gitminer')
        install_gitminer
        ;;
    *)
        echo "${RED}${HIGHLIGHT}[Error]${NC}: $1 was not included"
        echo "Supported:"
        typeset -f | awk '/ \(\) $/ && !/^main / {print $1}'
        ;;
    esac
fi

# if [ ! -z ${1} ]
# then

#     if [ "${1}" = "init" ]; then
#         install_dict
#     fi;

#     if [ "${1}" = "zap" ]; then
#         install_zap
#     fi;

#     if [ "${1}" = "nuclei" ]; then
#         install_dict
#     fi;

#     if [ "${1}" = "rengine" ]; then
#         install_rengine
#     fi;

# else
#     sudo ${*:1}
# fi
