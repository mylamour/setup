#!/bin/bash
# TODO: Self check, if it existed
echo "${RED}${HIGHLIGHT}Script Running On the Remote Server Now ${NC}"

install_ruby() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    echo "${GREEN}[Succeed]${NC}: Installed Successful"

}

install_rust() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_java() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    sudo apt update && sudo apt-get install -y openjdk-11-jdk openjdk-11-jre
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_nodejs() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    sudo apt update && sudo apt-get install -y nodejs npm
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_docker() {
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    sudo apt-get update && sudo apt-get install -y ca-certificates curl gnupg lsb-release
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
    sudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    sudo usermod -aG docker $USER
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

install_golang(){
    echo "[Info]: Starting to ${FUNCNAME[0]/_/ }"
    wget -q -O go1.17.8.linux-amd64.tar.gz https://go.dev/dl/go1.17.8.linux-amd64.tar.gz
    tar -C /usr/local -xzf go1.17.8.linux-amd64.tar.gz
    sed -i '$ a export PATH=$PATH:/usr/local/go/bin' ~/.bashrc
    echo "${GREEN}[Succeed]${NC}: Installed Successful"
}

if [ ! -z ${1} ]; then

    case ${1} in
    'allin')
        install_ruby
        install_rust
        install_docker
        install_nodejs
        install_java
        ;;
    'docker')
        install_docker
        ;;
    'java')
        install_java
        ;;
    'nodejs')
        install_nodejs
        ;;
    'go')
        install_golang
        ;;
    *)
        echo "${RED}${HIGHLIGHT}[Error]${NC}: $1 was not included"
        echo "Supported:"
        typeset -f | awk '/ \(\) $/ && !/^main / {print $1}'
        ;;
    esac
fi
